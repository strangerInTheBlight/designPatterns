Паттерн "Одиночка" гарантирует, что у класса есть только один объект (один экземпляр класса) и к этому объекту
предоставляется глобальная точка доступа.

Из описания должно быть понятно, что этот паттерн должен применяться в двух случаях:
- когда в вашей программе должно быть создано не более одного объекта какого-либо класса.
Например, в компьютерной игре у вас есть класс «Персонаж», и у этого класса должен быть только
один объект описывающий самого персонажа.

- когда требуется предоставить глобальную точку доступа к объекту класса.
Другими словами, нужно сделать так, чтобы объект вызывался из любого места программы. Для этого не достаточно
просто создать глобальную переменную, ведь она не защищена от записи и кто угодно может изменить значение этой
переменной и глобальная точка доступа к объекту будет потеряна. Это свойства Singleton'a нужно,
например, когда у вас есть объект класса, который работает с базой данных,
и вам нужно чтобы к базе данных был доступ из разных частей программы.
А Singleton будет гарантировать, что никакой другой код не заменил созданный ранее экземпляр класса.
